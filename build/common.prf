
# depending on your Qt configuration, you want to enable or disable
# one of the release/debug builds (if all three lines are commented,
# the default of your Qt installation will used)

# build with both debug and release mode
#CONFIG += debug_and_release build_all

# build with release mode only
#CONFIG += release

# build with debug mode only
#CONFIG += debug

# for all debug builds, add "_d" extension to target

!include (../../../global.pri)

!isEmpty(CONFIGURATION_SUFFIX):isEmpty(DEBUG_EXT):DEBUG_EXT=$${CONFIGURATION_SUFFIX}

isEmpty(DESTDIR) {
  DESTDIR = $$PWD/../bin
}

# Try files that are generated by the user:
PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp

!exists($$PYTHONQT_GENERATED_PATH) {
    # If no files are generated, try the checked-in wrappers:
    PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp_$${QT_MAJOR_VERSION}.$${QT_MINOR_VERSION}.$${QT_PATCH_VERSION}

    !exists($$PYTHONQT_GENERATED_PATH) {
	PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp_$${QT_MAJOR_VERSION}.$${QT_MINOR_VERSION}
    }
}

!exists($$PYTHONQT_GENERATED_PATH) {
	PYTHONQT_GENERATED_PATH = $$PWD/../generated_cpp_UNSUPPORTED_QT_VERSION
        error("No generated sources exist for Qt$${QT_VERSION}")
}

greaterThan(QT_MAJOR_VERSION, 5) | greaterThan(QT_MINOR_VERSION, 9): CONFIG += c++11
win32: CONFIG += skip_target_version_ext
gcc|win32-clang-msvc:QMAKE_CXXFLAGS += -Wno-deprecated-declarations -Wuninitialized -Winit-self -pedantic -ansi
win32-clang-msvc:QMAKE_CXXFLAGS += -Wno-unused-command-line-argument
#Do not issue warning to system includes
gcc:!isEmpty(QT_INSTALL_HEADERS): QMAKE_CXXFLAGS += -isystem $$[QT_INSTALL_HEADERS]

!build_pass {
  message("Qt version: Qt$${QT_VERSION}")
  message("Using generated sources files from $${PYTHONQT_GENERATED_PATH}")
}


QMAKE_CXXFLAGS -= -Werror -Werror=pedantic -pedantic-errors -Werror=write-strings
clang:QMAKE_CXXFLAGS += -Wno-error -Wno-error=sometimes-uninitialized -Wno-unused-variable -Wno-sign-compare -Wno-error=unreachable-code

QMAKE_CXXFLAGS += -Wno-cast-qual \
		  -Wno-conversion-null \
		  -Wno-sign-compare -Wno-unused-parameter -Wno-error=type-limits \
		  -Wno-error=parentheses -Wno-deprecated-declarations

defined(enableFlagIfCan) {
	TEST_FLAGS_LIST=-Wno-error=implicit-fallthrough
	!clang:TEST_FLAGS_LIST+= -Wno-error=cast-function-type
	for(f, TEST_FLAGS_LIST):enableFlagIfCan($$f)
}

#Mingw 4.9 complains...
win32:gcc:QMAKE_CXXFLAGS += -Wno-error=redundant-decls

